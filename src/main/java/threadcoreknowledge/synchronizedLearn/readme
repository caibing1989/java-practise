1、synchronized的作用
保证同一时间最多只有一个线程执行synchronized修饰的代码，从而达到线程安全的目的

2、synchronized的两个用法

对象锁：方法锁，默认锁this当前实例对象；代码块锁，可以自己指定锁对象

类锁：synchronized修饰的静态方法；或者指定锁为class对象

3、可重入
同一线程、外层函数获得锁之后，内层韩式可以直接再次获得该锁
有什么好处
避免死锁

4、不可中断

5、效率低，释放锁的时机较少，要不完成、要不异常，试图获得锁不能设定超时

6、不够灵活，例如没有读写锁

7、没有办法是否成功获得了锁

8、用的时候有什么需要注意的？
空对象、作用域不宜过大、避免死锁

9、如何选择lock和synchronized？
能用包就用包、不行就优先选择synchronized 因为简单，实在有需要再用lock

10、一句话介绍synchronized
通过使用monitor加锁和解锁，保证同一时间只有一个线程执行指定的代码，从而保证线程安全。同时具有可重入和不可中断性