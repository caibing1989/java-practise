1、一共有哪几类线程安全问题


2、哪些场景需要额外注意线程安全问题
访问共享变量或资源，会有并发风险，比如对象的属性、静态变量、共享缓存、数据库
所有依赖时序的工作，即使每一步都是线程安全的，还是存在并发问题，read-modify-write，check-and-act
不同的数据存在绑定关系
我们使用其它类的时候，如果对方没有声明自己是线程安全的


3、什么是多线程带来的上下文切换
挂起线程，将线程目前的状态存在内存中，状态就是上下文
上下文包含的经典内容有，比如线程执行到了哪一个指令，指令的位置在哪里
上下文切换中还包含缓存开销，例如缓存失效的问题（cpu需要重新进行缓存，一开始的速度会比较慢），缓存就是cpu会做一些预测，事先将一些数据缓存到cpu中

4、什么情况下会导致密集的上下文切换？
程序频繁的竞争锁，或者频繁的io读写，等带来频繁的线程阻塞

5、什么是线程安全
当多个线程访问一个对象时，
不用考虑线程在运行环境下的调度和交替执行，不需要调用方再进行任何的协调操作（不用管它们的调度），也不需要进行额外同步（上锁）
调用这个对象的行为都可以获得正确的结果，那么这个对象是线程安全的

作为编程者，当遇到多个线程访问一个对象或者方法时，不用做额外的处理，就像单线程那样，最后也能该对象的结果也是正确的，那么就是线程安全的

6、对象的发布和初始化的时候的安全问题

7、什么是多线程的性能问题，性能问题有哪些体现


8、为什么多线程会带来性能问题
调度带来的多线程上下文切换
协作原因 内存同步

9、什么时候会发生线程调度
当可用的线程数量超过了cpu的核数，操作系统就要调度线程，以便每个线程都有机会执行