一面：
工程素质
1）熟练使用Linux命令，对Linux底层原理较为熟悉。能对系统性能作出判断和调整；
2）模块设计考虑充分，接口清晰，性能预估合理；
3）代码编写风格优良，易懂，同时是一个合格的code reviewer；
4）严格遵循员工安全规范和安全开发规范，尤其是关于XSS、CSRF、SQL注入等常见安全问题
相关的规范。所设计和开发的模块能够有合理的权限管理和安全审计功能；
5）对自己所负责开发和维护的模块能够做高质量的单元测试。
工程方法
1）会用常用的开发工具（如版本管理工具，日常开发IDE/Editor等），
2）书写模块级别的开发文档（包括需求分析文档，总体设计文档，详细设计文档等）；
3）了解基本的开发流程（设计，开发，测试，上线，验证，回滚等），
并应用在项目开发中；知道并实践项目review流程，如code review，设计review等；
4）会使用常用的项目管理和协作工具（git, task, jira等）协同开发；
5）了解常见的软件工程开发模式，如瀑布模型，结对编程，敏捷开发。
开发能力
整体描述：
1）熟练掌握1~2门主流开发语言，具备良好的编码风格和代码注释；
2）掌握其它一门脚本编程，比如perl，python，vbs等；
3）熟练掌握常用的测试、诊断调优工具；
4）能够独立负责复杂模块的研发工作，规划模块的项目开发优先级；
5）能够推动项目按时完成交付。
Java：
1）阅读过常用JDK类的源代码，了解实现逻辑；
2）对常用第三方类库非常熟悉；
3）能够自主调研、学习并应用第三方类库、插件等；
4）能及时跟进新版JAVA特性。

二面
业务理解
1）能准确理解业务，设计适应实际需要的系统；
2）能识别并排列需求优先级。
架构能力
1）能独立设计一个健壮，可扩展的子系统。

三面
有效沟通
1）有主动沟通的意识，主动沟通解决工作问题；
2）能够主持小型讨论（4人），并输出相关文档；
3）较好的语言表达能力；
4）熟练使用wiki、task、email、calendar等沟通工具。
执行力
1）能够积极接受一定难度的工作任务，并按要求完成；
2）能够准确理解上级所交代的工作，主动思考如何完成任务；
3）能够及时反馈与沟通任务进展情况。
技术规划和推动能力
1）能够对所负责的事情做中短期的规划。
拥抱变化
1）理解互联网唯一不变的就是变化，适应公司的日常变化，不抱怨。
团队合作
1）乐于接受帮助，配合团队完成工作，积极参与团队活动。
指导能力和影响力
1）辅导新人，对团队有正面输出,获得团队成员认可。