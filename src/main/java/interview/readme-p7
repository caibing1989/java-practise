一面：
工程素质
1）系统设计和实现时能够考虑到系统的运维需要，提供完整的运维方案和上线回滚方案；
2）对所负责的系统面临的安全风险和问题能够有清楚的认识，在做设计时能够提前考虑。
3）在面临安全突发问题时，能够及时正确的给出解决方案；
4）对公司内的服务和平台有较为充分的了解，
5）能够正确的复用公司的公共服务和平台，不重复造轮子。
工程方法
1）熟练使用常用的开发工具，能够书写系统级别的开发文档（包括需求分析文档，
总体设计文档，详细设计文档等），能够指导低级别工程师完成开发文档的书写和review；
2）熟悉并实践基本的开发流程（设计，开发，测试，上线，验证，回滚等），
能够指导低级别工程师遵守相应的开发注程；熟悉项目review流程和要点，
如code review，设计review等；能够在项目中遵守review，提高项目质量；
3）熟悉常用的项目管理和协作工具（git, task, jira等），能够对项目进行拆分，
并使用管理工具进行管理和协同开发；
4）能够搭建或者指导搭建或者选型采购持续集成系统，
并利用该系统提高产品质量，加快迭代速度。
开发能力
整体描述：
1）精通1~2门主流开发语言，具备良好的编码风格和代码注释；
2）主导或深入参与过一个成功的中型项目研发工作，
或者在一个大型项目中成功研发其中的核心子项目，担任其中研发负责人；
3）能够协同团队完成简单系统的研发工作，包括需求调研，设计，开发，文档，测试，上线等；
4）能够协调系统各模块的研发进度，推动系统的按时交付。
Java：
1）了解Java内存管理的细节；
2）掌握profiling方法；
3）能够根据具体的应用程序特点进行JVM参数优化；
4）能够在必要时，对已有第三方类库进行优化及扩展；
5）Fix第三方类库Bug。

二面：
业务理解
1）能提炼本质需求，优化业务流程；
2）能预期到需求的走向和趋势，设计具备相当的延展性同时避免过度设计；
3）能根据市场和环境变化敏捷调整优先级排列。
架构能力
1）能在产品功能，性能，可扩展性，发布预期间权衡取舍，以满足产品发布目标。

三面：
有效沟通
1）熟悉并掌握STAR模型、金字塔原理；
2）能选择合适的沟通方式和工具进行有效沟通；
3）主持中型讨论（10人），能够综合协调意见，输出结论；
4）能以清晰的书面语言表达技术或设计观点。
5）在以上的要求之外，需要有良好的技术演讲能力；
6）在沟通和会议支持过程中能够遵循互动流程的要求；
7）能够输出完整规范的设计、技术类文档。
执行力
1）能够积极接受一定难度的工作任务，并按要求完成；
2）能够准确理解上级所交代的工作，主动思考如何完成任务；
3）能够及时反馈与沟通任务进展情况。
技术规划和推动能力
1）在所负责的方向上能够结合业务做中长期的技术规划，同时能够给出切实的落地计划并带领团队实施规划。
拥抱变化
1）认同并支持合理变化，既不因局部不合理而否定整个变化，也能够通过正确渠道提出合理化建议。
团队合作
1）积极主动分享业务知识和经验，帮助他人；善于利用团队的力量解决问题。
指导能力和影响力
1）能全面指导低级别工程师，包括业绩、素质、领导力、技术能力等多方面的全面成长；
2）能够积极总结技术经验，组织或参与相关活动，讨论和分享；
3）在团队内具有影响力。